# ========================================================================
# Open-Spot 환경변수 설정 예시 파일
# Environment Variables Template
# ========================================================================
#
# ⚠️  중요: 두 개의 환경 파일이 있습니다!
# IMPORTANT: There are two environment files!
#
# 1. .env (로컬 Docker 개발용)
#    - 용도: Docker Compose로 로컬 개발할 때 사용
#    - 값: localhost, 로컬 포트
#    - 설정: cp .env.example .env
#
# 2. .env.k8s (Kubernetes 배포용)
#    - 용도: Kubernetes 클러스터에 배포할 때 사용
#    - 값: Kubernetes 서비스명 (redis, postgresql 등)
#    - 설정: cp .env.example .env.k8s
#    - 수정: 서비스명을 실제 환경에 맞게 변경
#
# ========================================================================

# ========================================================================
# Google OAuth2 설정
# Google Cloud Console에서 발급받은 OAuth2 클라이언트 ID/Secret
# ========================================================================
GOOGLE_CLIENT_ID=your-google-client-id-here
GOOGLE_CLIENT_SECRET=your-google-client-secret-here

# 로컬 Docker: http://localhost:8080/...
# Kubernetes: https://api.kang-labs.com/... (또는 실제 도메인)
OAUTH2_REDIRECT_URI="http://localhost:8080/login/oauth2/code/google"

# ========================================================================
# JWT 설정
# 개발용: 임의의 긴 문자열, 운영용: 보안된 랜덤 키 사용
# ========================================================================
JWT_SECRET=open-spot-jwt-secret-key-for-development-change-this-in-production

# ========================================================================
# 데이터베이스 설정
# Database Configuration
# ========================================================================
# 로컬 Docker: localhost (docker-compose.yml의 PostgreSQL)
# Kubernetes: postgresql (Kubernetes Service name)
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_DB=openspot
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres

# ========================================================================
# Redis 설정
# Redis Configuration
# ========================================================================
# 로컬 Docker: localhost (docker-compose.yml의 redis service)
# Kubernetes: redis (Kubernetes Service name)
REDIS_HOST=localhost
REDIS_PORT=6379

# ========================================================================
# Kafka 설정
# Kafka Configuration
# ========================================================================
# 로컬 Docker: localhost:9092 (docker-compose.yml의 kafka service)
# Kubernetes: kafka:9092 (Kubernetes Service name)
KAFKA_BOOTSTRAP_SERVERS=localhost:9092

# ========================================================================
# 서비스 호스트 설정
# Service Host Configuration
# ========================================================================
# 로컬 Docker: localhost (각 서비스는 별도 포트)
# Kubernetes: service-name (Kubernetes Service DNS)
AUTH_SERVICE_HOST=localhost
AUTH_SERVICE_PORT=8081
LOCATION_SERVICE_HOST=localhost
LOCATION_SERVICE_PORT=8082

# ========================================================================
# Frontend 설정
# Frontend Configuration
# ========================================================================
# 로컬 Docker: http://localhost:3000
# Kubernetes: https://api.kang-labs.com (또는 실제 프론트엔드 도메인)
FRONTEND_BASE_URL=http://localhost:3000
FRONTEND_AUTH_SUCCESS_PATH=/
FRONTEND_AUTH_ERROR_PATH=/login/error