# ==============================================================================
# Monitoring Stack for Open-Spot
#
# Usage:
#   docker-compose -f docker-compose.yml -f docker-compose.monitoring.yml up -d
#
# Access:
#   - Grafana: http://localhost:3000 (admin/admin)
#   - Prometheus: http://localhost:9090
# ==============================================================================

services:
  # ============================================================================
  # Prometheus - 메트릭 수집 및 저장
  # ============================================================================
  prometheus:
    image: prom/prometheus:v2.48.0
    container_name: openspot-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - openspot-network
    restart: unless-stopped

  # ============================================================================
  # Grafana - 대시보드 및 시각화
  # ============================================================================
  grafana:
    image: grafana/grafana:10.2.2
    container_name: openspot-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_ROOT_URL=http://localhost:3000
      - GF_INSTALL_PLUGINS=redis-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana-provisioning:/etc/grafana/provisioning:ro
      - ./monitoring/grafana-dashboards:/var/lib/grafana/dashboards:ro
    networks:
      - openspot-network
    depends_on:
      - prometheus
    restart: unless-stopped

  # ============================================================================
  # Loki - 로그 수집 및 저장
  # ============================================================================
  loki:
    image: grafana/loki:2.9.3
    container_name: openspot-loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/loki-config.yml
    volumes:
      - ./monitoring/loki-config.yml:/etc/loki/loki-config.yml:ro
      - loki_data:/loki
    networks:
      - openspot-network
    restart: unless-stopped

  # ============================================================================
  # Promtail - 로그 전송 에이전트
  # ============================================================================
  promtail:
    image: grafana/promtail:2.9.3
    container_name: openspot-promtail
    command: -config.file=/etc/promtail/promtail-config.yml
    volumes:
      - ./monitoring/promtail-config.yml:/etc/promtail/promtail-config.yml:ro
      - ./logs:/app/logs:ro
      - /var/log:/var/log:ro
    networks:
      - openspot-network
    depends_on:
      - loki
    restart: unless-stopped

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  loki_data:
    driver: local

networks:
  openspot-network:
    external: true
