{{- if .Values.kafka.enabled }}
apiVersion: v1
kind: Service
metadata:
  name: kafka
  namespace: {{ .Values.global.namespace }}
  labels:
    app: kafka
    {{- include "openspot.labels" . | nindent 4 }}
spec:
  ports:
    - port: {{ .Values.kafka.service.port }}
      targetPort: 9092
      protocol: TCP
      name: kafka
  clusterIP: None  # Headless service for StatefulSet
  selector:
    app: kafka
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: {{ .Values.global.namespace }}
  labels:
    app: kafka
    {{- include "openspot.labels" . | nindent 4 }}
spec:
  serviceName: kafka
  replicas: {{ .Values.kafka.replicas }}
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      initContainers:
        - name: wait-for-zookeeper
          image: busybox:1.36
          command: ['sh', '-c']
          args:
            - |
              echo "Waiting for Zookeeper..."
              until nc -z zookeeper 2181; do echo "Waiting for Zookeeper at :2181..."; sleep 2; done
              echo "Zookeeper is ready!"
      containers:
        - name: kafka
          image: {{ .Values.kafka.image }}
          imagePullPolicy: {{ include "openspot.imagePullPolicy" . }}
          ports:
            - containerPort: 9092
              name: kafka
          env:
            - name: KAFKA_BROKER_ID
              value: {{ .Values.kafka.env.KAFKA_BROKER_ID | quote }}
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: {{ .Values.kafka.env.KAFKA_ZOOKEEPER_CONNECT | quote }}
            - name: KAFKA_ADVERTISED_LISTENERS
              value: {{ .Values.kafka.env.KAFKA_ADVERTISED_LISTENERS | quote }}
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: {{ .Values.kafka.env.KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR | quote }}
            - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
              value: {{ .Values.kafka.env.KAFKA_TRANSACTION_STATE_LOG_MIN_ISR | quote }}
            - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
              value: {{ .Values.kafka.env.KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR | quote }}
            - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
              value: {{ .Values.kafka.env.KAFKA_AUTO_CREATE_TOPICS_ENABLE | quote }}
          volumeMounts:
            - name: kafka-data
              mountPath: /var/lib/kafka/data
          resources:
            {{- toYaml .Values.kafka.resources | nindent 12 }}
          livenessProbe:
            tcpSocket:
              port: 9092
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            tcpSocket:
              port: 9092
            initialDelaySeconds: 120
            periodSeconds: 15
            timeoutSeconds: 10
            failureThreshold: 10
  volumeClaimTemplates:
    - metadata:
        name: kafka-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        {{- if .Values.kafka.persistence.storageClass }}
        storageClassName: {{ .Values.kafka.persistence.storageClass }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.kafka.persistence.size }}
{{- end }}
