# Development docker-compose: Infrastructure only
# Use ./start-infrastructure.sh and ./start-services.sh for development
# For production, use: docker-compose -f docker-compose.prod.yml up

services:
  postgresql:
    image: postgis/postgis:15-3.3
    container_name: openspot-postgresql
    environment:
      POSTGRES_DB: openspot
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgresql_data:/var/lib/postgresql/data
      - ./scripts/init-databases.sql:/docker-entrypoint-initdb.d/init-databases.sql
    networks:
      - openspot-network

  redis:
    image: redis:7.2-alpine
    container_name: openspot-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - openspot-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: openspot-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - openspot-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: openspot-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - openspot-network

  # Spring Boot microservices
  config-service:
    build:
      context: .
      dockerfile: msa-modules/2-config-service/Dockerfile
    container_name: openspot-config-service
    env_file: .env
    ports:
      - "9999:9999"
    networks:
      - openspot-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9999/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 40s

  gateway-service:
    build:
      context: .
      dockerfile: msa-modules/3-gateway-service/Dockerfile
    container_name: openspot-gateway-service
    env_file: .env
    ports:
      - "8080:8080"
    depends_on:
      config-service:
        condition: service_healthy
    networks:
      - openspot-network
    environment:
      - SPRING_CLOUD_CONFIG_URI=http://config-service:9999
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 40s

  auth-service:
    build:
      context: .
      dockerfile: msa-modules/4-auth-service/Dockerfile
    container_name: openspot-auth-service
    env_file: .env
    ports:
      - "8081:8081"
    depends_on:
      postgresql:
        condition: service_started
      redis:
        condition: service_started
      gateway-service:
        condition: service_healthy
    networks:
      - openspot-network
    environment:
      - SPRING_CLOUD_CONFIG_URI=http://config-service:9999
      - POSTGRES_HOST=postgresql
      - REDIS_HOST=redis
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8081/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 60s

  location-service:
    build:
      context: .
      dockerfile: msa-modules/5-location-service/Dockerfile
    container_name: openspot-location-service
    env_file: .env
    ports:
      - "8082:8082"
    depends_on:
      postgresql:
        condition: service_started
      redis:
        condition: service_started
      gateway-service:
        condition: service_healthy
    networks:
      - openspot-network
    environment:
      - SPRING_CLOUD_CONFIG_URI=http://config-service:9999
      - POSTGRES_HOST=postgresql
      - REDIS_HOST=redis
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8082/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 60s

  notification-service:
    build:
      context: .
      dockerfile: msa-modules/6-notification-service/Dockerfile
    container_name: openspot-notification-service
    env_file: .env
    ports:
      - "8083:8083"
    depends_on:
      postgresql:
        condition: service_started
      kafka:
        condition: service_started
      gateway-service:
        condition: service_healthy
    networks:
      - openspot-network
    environment:
      - SPRING_CLOUD_CONFIG_URI=http://config-service:9999
      - POSTGRES_HOST=postgresql
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8083/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 60s

volumes:
  postgresql_data:
    driver: local
  redis_data:
    driver: local
  kafka_data:
    driver: local

networks:
  openspot-network:
    driver: bridge